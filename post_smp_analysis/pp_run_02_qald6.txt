question	ug_gp_graphs	ug_sparql	g-SPARQL
Who was the doctoral supervisor of Albert Einstein?	{'Semantic Parse': ' [QUESTION(0:x), who.arg0(0:e , 0:x), supervisor(4:s , 4:x), supervisor.arg0(4:e , 4:x), doctoral(3:s , 4:x), who(0:s , 0:x), who.arg1(0:e , 4:x), supervisor.nmod.of(4:e , 7:m.Albert_Einstein), arg0(7:e , 7:m.Albert_Einstein)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, doctoral, doctoral, ADJ, null}\n', '{4, supervisor, supervisor, NOUN, null}\n', '{7, Einstein, einstein, PROPN, null}\n'], 'Edges': [['(4,7,4)', '(supervisor.nmod.of,supervisor.arg0):0.0\n'], ['(0,0,4)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(4,3)', 'doctoral:0.0\n'], ['(4,4)', 'supervisor:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <supervisor> . <Einstein> <supervisor> <supervisor>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Doctoral_advisor> . <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/property/supervisor> <http://dbpedia.org/resource/Doctoral_advisor>}'
Did Kaurismäki ever win the Grand Prix at Cannes?	{'Semantic Parse': ' [arg0(8:e , 8:m.Cannes), ever(2:s , 3:e), win.arg1(3:e , 1:m.Kaurismäki), win.arg2(3:e , 6:m.Grand_Prix), arg0(6:e , 6:m.Grand_Prix), win.nmod.at(3:e , 8:m.Cannes)]\n', 'nodes': ['{1, Kaurismäki, kaurismäki, PROPN, null}\n', '{2, ever, ever, ADV, null}\n', '{3, win, win, VERB, null}\n', '{6, Prix, prix, PROPN, null}\n', '{8, Cannes, cannes, PROPN, null}\n'], 'Edges': [['(3,1,6)', '(win.arg1,win.arg2):0.0\n'], ['(3,8,1)', '(win.nmod.at,win.arg1):0.0\n'], ['(3,8,6)', '(win.nmod.at,win.arg2):0.0\n']], 'Types': [], 'Properties': [], 'EventTypes': [['(3,2)', 'ever:0.0\n']], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<Kaurismäki> <win> <Prix> . <Cannes> <win> <Kaurismäki> . <Cannes> <win> <Prix>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Cannes_Lions_International_Festival_of_Creativity> <http://dbpedia.org/property/win> <http://dbpedia.org/resource/Resource> . <http://dbpedia.org/resource/Cannes_Lions_International_Festival_of_Creativity> <http://dbpedia.org/property/win> <http://dbpedia.org/resource/Prix_Cléopâtre> . <http://dbpedia.org/resource/Mika_Kaurismäki> <http://dbpedia.org/property/win> <http://dbpedia.org/resource/Prix_Brentano>}'
Who wrote the song Hotel California?	{'Semantic Parse': ' [QUESTION(0:x), write.arg2(1:e , 5:m.California), arg0(5:e , 5:m.California), hotel(4:s , 5:m.California), song(3:s , 5:m.California), who(0:s , 0:x), write.arg1(1:e , 0:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, wrote, write, VERB, null}\n', '{3, song, song, NOUN, null}\n', '{4, Hotel, hotel, NOUN, null}\n', '{5, California, california, PROPN, null}\n'], 'Edges': [['(1,0,5)', '(write.arg1,write.arg2):0.0\n']], 'Types': [['(5,4)', 'hotel:0.0\n'], ['(5,3)', 'song:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <write> <California>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/write> <http://dbpedia.org/resource/California>}'
Who was on the Apollo 11 mission?	{'Semantic Parse': ' [QUESTION(0:x), mission.arg0(6:e , 6:x), who(0:s , 0:x), mission(6:s , 6:x), mission.arg1.on(6:e , 0:x), mission.compound(6:e , 4:m.apollo)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{4, Apollo, apollo, PROPN, null}\n', '{6, mission, mission, NOUN, null}\n'], 'Edges': [['(6,0,6)', '(mission.arg1.on,mission.arg0):0.0\n'], ['(6,4,6)', '(mission.compound,mission.arg0):0.0\n'], ['(6,4,0)', '(mission.compound,mission.arg1.on):0.0\n']], 'Types': [['(6,6)', 'mission:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <mission> <mission> . <Apollo> <mission> ?x0 . <Apollo> <mission> <mission>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Chancery_(diplomacy)> . <http://dbpedia.org/resource/Apollo
Which electronics companies were founded in Beijing?	{'Semantic Parse': ' [companies(2:s , 2:x), electronics.companies(1:s , 2:x), arg0(6:e , 6:m.Beijing), company.arg0(2:e , 2:x), QUESTION(2:x), found.arg2(4:e , 2:x), found.nmod.in(4:e , 6:m.Beijing), which(0:s , 2:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, electronics, electronics, NOUN, null}\n', '{2, companies, company, NOUN, null}\n', '{4, founded, found, VERB, null}\n', '{6, Beijing, beijing, PROPN, null}\n'], 'Edges': [['(4,2,6)', '(found.arg2,found.nmod.in):0.0\n']], 'Types': [['(2,2)', 'companies:0.0\n'], ['(2,1)', 'electronics.companies:0.0\n'], ['(2,0)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {?x2 <found> <Beijing>}	'SELECT DISTINCT ?x2  WHERE {?x2 <http://dbpedia.org/property/found> <http://dbpedia.org/resource/Beijing_Beijing
What is in a chocolate chip cookie?	{'Semantic Parse': ' [QUESTION(0:x), chip(5:s , 6:m.cookie), what(0:s , 0:x), arg0(6:e , 6:m.cookie), chocolate(4:s , 6:m.cookie), arg1.in(6:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{4, chocolate, chocolate, NOUN, null}\n', '{5, chip, chip, NOUN, null}\n', '{6, cookie, cookie, PROPN, null}\n'], 'Edges': [['(6,6,0)', '(arg0,arg1.in):0.0\n']], 'Types': [['(6,5)', 'chip:0.0\n'], ['(6,4)', 'chocolate:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<cookie> <arg0> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Cookie_Rojas> <http://dbpedia.org/property/poverty> ?x0}'
What is the atmosphere of the Moon composed of?	{'Semantic Parse': ' [atmosphere(3:s , 3:x), QUESTION(0:x), what.arg1(0:e , 3:x), compose.nmod(7:e , 6:x), what(0:s , 0:x), moon(6:s , 6:x), atmosphere.arg0(3:e , 3:x), atmosphere.nmod.of(3:e , 6:x), moon.arg0(6:e , 6:x), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, atmosphere, atmosphere, NOUN, null}\n', '{6, Moon, moon, NOUN, null}\n'], 'Edges': [['(3,6,3)', '(atmosphere.nmod.of,atmosphere.arg0):0.0\n'], ['(0,3,0)', '(what.arg1,what.arg0):0.0\n']], 'Types': [['(3,3)', 'atmosphere:0.0\n'], ['(6,6)', 'moon:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<atmosphere> <arg1> ?x0 . <Moon> <atmosphere> <atmosphere>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Moon_Moon_Sen> <http://dbpedia.org/property/atmosphere> <http://dbpedia.org/resource/Modified_atmosphere> . <http://dbpedia.org/resource/Mood_(literature)> <http://dbpedia.org/property/poverty> ?x0}'
How many movies did Park Chan-wook direct?	{'Semantic Parse': ' [QUESTION(0:x), how(0:s , 0:x), direct.arg2(6:e , 2:x), movie.arg0(2:e , 2:x), movies(2:s , 2:x), COUNT(2:x , 0:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, movies, movie, NOUN, null}\n'], 'Edges': [], 'Types': [['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n'], ['(2,2)', 'movies:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {}	'SELECT DISTINCT ?x0 ?x2  WHERE {}'
Who are the developers of DBpedia?	{'Semantic Parse': ' [QUESTION(0:x), developers(3:s , 3:x), who.arg0(0:e , 0:x), developer.arg0(3:e , 3:x), developer.nmod.of(3:e , 5:m.dbpedia), arg0(5:e , 5:m.dbpedia), who(0:s , 0:x), who.arg1(0:e , 3:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, developers, developer, NOUN, null}\n', '{5, DBpedia, dbpedia, PROPN, null}\n'], 'Edges': [['(3,3,5)', '(developer.arg0,developer.nmod.of):0.0\n'], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(3,3)', 'developers:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<developers> <developer> <DBpedia> . ?x0 <arg0> <developers>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Google_Developers> <http://dbpedia.org/property/developer/manager> <http://dbpedia.org/resource/Expedia
Which Indian company has the most employees?	{'Semantic Parse': ' [company(2:s , 2:x), most(5:s , 6:x), have.arg1(3:e , 2:x), have.arg2(3:e , 6:x), company.arg0(2:e , 2:x), QUESTION(2:x), employee.arg0(6:e , 6:x), employees(6:s , 6:x), indian(1:s , 2:x), which(0:s , 2:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, Indian, indian, ADJ, null}\n', '{2, company, company, NOUN, null}\n', '{3, has, have, VERB, null}\n', '{5, most, most, ADJ, null}\n', '{6, employees, employee, NOUN, null}\n'], 'Edges': [['(3,6,2)', '(have.arg2,have.arg1):0.0\n']], 'Types': [['(2,2)', 'company:0.0\n'], ['(6,6)', 'employees:0.0\n'], ['(2,1)', 'indian:0.0\n'], ['(6,5)', 'most:0.0\n'], ['(2,0)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<employees> <arg2> ?x2}	'SELECT DISTINCT ?x2  WHERE {<http://dbpedia.org/resource/Foreign_domestic_employees> <http://dbpedia.org/property/poverty> ?x2}'
What is the name of the school where Obama's wife studied?	"{'Semantic Parse': "" [arg0(8:e , 8:m.Obama), study.arg1(11:e , 10:x), study.arg2(11:e , 6:x), QUESTION(0:x), what.arg1(0:e , 3:x), wife(10:s , 10:x), wife.arg0(10:e , 10:x), school.arg0(6:e , 6:x), name.nmod.of(3:e , 6:x), school(6:s , 6:x), name.arg0(3:e , 3:x), name(3:s , 3:x), wife.nmod.'s(10:e , 8:m.Obama), what(0:s , 0:x), where(7:s , 11:e), what.arg0(0:e , 0:x)]\n"", 'nodes': ['{0, What, what, PRON, null}\n', '{3, name, name, NOUN, null}\n', '{6, school, school, NOUN, null}\n', '{7, where, where, ADV, null}\n', '{8, Obama, obama, PROPN, null}\n', '{10, wife, wife, NOUN, null}\n', '{11, studied, study, VERB, null}\n'], 'Edges': [['(3,6,3)', '(name.nmod.of,name.arg0):0.0\n'], ['(11,10,6)', '(study.arg1,study.arg2):0.0\n'], ['(0,3,0)', '(what.arg1,what.arg0):0.0\n'], ['(10,8,10)', ""(wife.nmod.'s,wife.arg0):0.0\n""]], 'Types': [['(3,3)', 'name:0.0\n'], ['(6,6)', 'school:0.0\n'], ['(0,0)', 'what:0.0\n'], ['(10,10)', 'wife:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [['(11,7)', 'where:0.0\n']], 'EventEventModifiers': []}"	SELECT DISTINCT ?x0  WHERE {<wife> <study> <school> . <school> <name> <name> . <Obama> <wife> <wife> . <name> <arg1> ?x0}	"""SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Baba_(name)> <http://dbpedia.org/property/poverty> ?x0 . <http://dbpedia.org/resource/Wife> <http://dbpedia.org/property/study> <http://dbpedia.org/resource/School> . <http://dbpedia.org/resource/Confirmations_of_Barack_Obama's_Cabinet> <http://dbpedia.org/property/wife.> <http://dbpedia.org/resource/Wife> . <http://dbpedia.org/resource/Parit_Sulong> <http://dbpedia.org/property/nAme> <http://dbpedia.org/resource/Name>}"""
Where does Piccadilly start?	{'Semantic Parse': ' [QUESTION(0:x), start.arg1(3:e , 2:m.piccadilly), start.advmod(3:e , 0:x), where(0:s , 0:x)]\n', 'nodes': ['{0, Where, where, ADV, null}\n', '{2, Piccadilly, piccadilly, PROPN, null}\n', '{3, start, start, VERB, null}\n'], 'Edges': [['(3,2,0)', '(start.arg1,start.advmod):0.0\n']], 'Types': [['(0,0)', 'where:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Piccadilly> <start> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Piccadilly> <http://dbpedia.org/property/start> ?x0}'
What is the capital of Cameroon?	{'Semantic Parse': ' [arg0(5:e , 5:m.Cameroon), QUESTION(0:x), what.arg1(0:e , 3:x), what(0:s , 0:x), capital.nmod.of(3:e , 5:m.Cameroon), capital(3:s , 3:x), what.arg0(0:e , 0:x), capital.arg0(3:e , 3:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, capital, capital, NOUN, null}\n', '{5, Cameroon, cameroon, PROPN, null}\n'], 'Edges': [['(3,3,5)', '(capital.arg0,capital.nmod.of):0.0\n'], ['(0,3,0)', '(what.arg1,what.arg0):0.0\n']], 'Types': [['(3,3)', 'capital:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<capital> <arg1> ?x0 . <capital> <capital> <Cameroon>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Capital_city> <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Yaoundé> . <http://dbpedia.org/resource/Capital_city> <http://dbpedia.org/property/poverty> ?x0}'
When did the Boston Tea Party take place?	{'Semantic Parse': ' [take(6:s , 6:x), QUESTION(0:x), take.arg1(6:e , 5:m.Boston_Tea_Party), take.advmod(6:e , 0:x), take.arg2(6:e , 7:x), when(0:s , 0:x), place(7:s , 7:x), arg0(5:e , 5:m.Boston_Tea_Party), take.arg0(6:e , 6:x)]\n', 'nodes': ['{0, When, when, ADV, null}\n', '{5, Party, party, NOUN, null}\n', '{6, take, take, NOUN, null}\n', '{7, place, place, NOUN, null}\n'], 'Edges': [['(6,0,6)', '(take.advmod,take.arg0):0.0\n'], ['(6,0,5)', '(take.advmod,take.arg1):0.0\n'], ['(6,0,7)', '(take.advmod,take.arg2):0.0\n'], ['(6,6,7)', '(take.arg0,take.arg2):0.0\n'], ['(6,5,6)', '(take.arg1,take.arg0):0.0\n'], ['(6,5,7)', '(take.arg1,take.arg2):0.0\n']], 'Types': [['(7,7)', 'place:0.0\n'], ['(6,6)', 'take:0.0\n'], ['(0,0)', 'when:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <take> <place> . ?x0 <take> <Party> . <Party> <take> <take> . ?x0 <take> <take> . <Party> <take> <place> . <take> <take> <place>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/make> <http://dbpedia.org/resource/Political_party> . <http://dbpedia.org/resource/Party> <http://dbpedia.org/property/make> <http://dbpedia.org/resource/Region> . <http://dbpedia.org/resource/Political_party> <http://dbpedia.org/property/make> <http://dbpedia.org/resource/Take_Care
Who played Gus Fring in Breaking Bad?	{'Semantic Parse': ' [QUESTION(0:x), who(0:s , 0:x), play.arg1(1:e , 0:x), play.advcl(1:e , 5:e)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, played, play, VERB, null}\n', '{5, Breaking, break, VERB, null}\n'], 'Edges': [], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': [['(1,5)', 'play.advcl:0.0\n']]}	SELECT DISTINCT ?x0  WHERE {}	'SELECT DISTINCT ?x0  WHERE {}'
Who wrote Harry Potter?	{'Semantic Parse': ' [write.arg2(1:e , 3:m.Harry_Potter), QUESTION(0:x), who(0:s , 0:x), write.arg1(1:e , 0:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, wrote, write, VERB, null}\n', '{3, Potter, potter, PROPN, null}\n'], 'Edges': [['(1,0,3)', '(write.arg1,write.arg2):0.0\n']], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <write> <Potter>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/write> <http://dbpedia.org/resource/Patricia_Potter>}'
Which actors play in Big Bang Theory?	{'Semantic Parse': ' [actors(1:s , 1:x), big(4:s , 6:x), play.arg1(2:e , 1:x), bang.theory(5:s , 6:x), actor.arg0(1:e , 1:x), play.nmod.in(2:e , 6:x), theory.arg0(6:e , 6:x), QUESTION(1:x), theory(6:s , 6:x), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, actors, actor, NOUN, null}\n', '{2, play, play, VERB, null}\n', '{4, Big, big, ADJ, null}\n', '{5, Bang, bang, NOUN, null}\n', '{6, Theory, theory, NOUN, null}\n'], 'Edges': [['(2,1,6)', '(play.arg1,play.nmod.in):0.0\n']], 'Types': [['(1,1)', 'actors:0.0\n'], ['(6,5)', 'bang.theory:0.0\n'], ['(6,4)', 'big:0.0\n'], ['(6,6)', 'theory:0.0\n'], ['(1,0)', 'which:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {?x1 <play> <Theory>}	'SELECT DISTINCT ?x1  WHERE {?x1 <http://dbpedia.org/property/play> <http://dbpedia.org/resource/Theory>}'
What is the largest country in the world?	{'Semantic Parse': ' [QUESTION(0:x), what.arg1(0:e , 4:x), largest(3:s , 4:x), what(0:s , 0:x), country.arg0(4:e , 4:x), country(4:s , 4:x), country.nmod.in(4:e , 7:x), world(7:s , 7:x), world.arg0(7:e , 7:x), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, largest, largest, ADJ, null}\n', '{4, country, country, NOUN, null}\n', '{7, world, world, NOUN, null}\n'], 'Edges': [['(4,4,7)', '(country.arg0,country.nmod.in):0.0\n'], ['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(4,4)', 'country:0.0\n'], ['(4,3)', 'largest:0.0\n'], ['(0,0)', 'what:0.0\n'], ['(7,7)', 'world:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <country> . <country> <country> <world>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Country_music> <http://dbpedia.org/property/coUntry> <http://dbpedia.org/resource/World_World_World> . ?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/My_Country
Who is the most powerful Jedi?	{'Semantic Parse': ' [powerful(4:s , 5:m.Jedi), QUESTION(0:x), who.arg0(0:e , 0:x), most(3:s , 5:e), who(0:s , 0:x), who.arg1(0:e , 5:m.Jedi), arg0(5:e , 5:m.Jedi)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, most, most, ADV, null}\n', '{4, powerful, powerful, ADJ, null}\n', '{5, Jedi, jedi, PROPN, null}\n'], 'Edges': [['(0,0,5)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(5,4)', 'powerful:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [['(5,3)', 'most:0.0\n']], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <Jedi>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Jediism>}'
How many goals did Pelé score?	{'Semantic Parse': ' [score.arg0(5:e , 5:x), QUESTION(0:x), score.arg1(5:e , 2:x), how(0:s , 0:x), goal.arg0(2:e , 2:x), score(5:s , 5:x), COUNT(2:x , 0:x), goals(2:s , 2:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, goals, goal, NOUN, null}\n', '{5, score, score, NOUN, null}\n'], 'Edges': [['(5,2,5)', '(score.arg1,score.arg0):0.0\n']], 'Types': [['(2,2)', 'goals:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n'], ['(5,5)', 'score:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {?x2 <score> <score>}	'SELECT DISTINCT ?x0 ?x2  WHERE {?x2 <http://dbpedia.org/property/bScore> <http://dbpedia.org/resource/Score>}'
Who is the president of Eritrea?	{'Semantic Parse': ' [arg0(3:e , 3:m.president), QUESTION(0:x), who.arg1(0:e , 3:m.president), arg0(5:e , 5:m.Eritrea), who.arg0(0:e , 0:x), nmod.of(3:e , 5:m.Eritrea), who(0:s , 0:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, president, president, PROPN, null}\n', '{5, Eritrea, eritrea, PROPN, null}\n'], 'Edges': [['(3,3,5)', '(arg0,nmod.of):0.0\n'], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<president> <arg0> <Eritrea> . ?x0 <arg0> <president>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/President> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Eritrea> . ?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/President>}'
Which computer scientist won an oscar?	{'Semantic Parse': ' [win.arg1(3:e , 2:x), oscar(5:s , 5:x), oscar.arg0(5:e , 5:x), scientist(2:s , 2:x), scientist.arg0(2:e , 2:x), QUESTION(2:x), computer.scientist(1:s , 2:x), win.arg2(3:e , 5:x), which(0:s , 2:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, computer, computer, NOUN, null}\n', '{2, scientist, scientist, NOUN, null}\n', '{3, won, win, VERB, null}\n', '{5, oscar, oscar, NOUN, null}\n'], 'Edges': [['(3,2,5)', '(win.arg1,win.arg2):0.0\n']], 'Types': [['(2,1)', 'computer.scientist:0.0\n'], ['(5,5)', 'oscar:0.0\n'], ['(2,2)', 'scientist:0.0\n'], ['(2,0)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {?x2 <win> <oscar>}	'SELECT DISTINCT ?x2  WHERE {?x2 <http://dbpedia.org/property/win> <http://dbpedia.org/resource/Academy_Awards>}'
Who created Family Guy?	{'Semantic Parse': ' [QUESTION(0:x), create.arg1(1:e , 0:x), create.arg2(1:e , 3:x), who(0:s , 0:x), guy.arg0(3:e , 3:x), family.guy(2:s , 3:x), guy(3:s , 3:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, created, create, VERB, null}\n', '{2, Family, family, NOUN, null}\n', '{3, Guy, guy, NOUN, null}\n'], 'Edges': [['(1,0,3)', '(create.arg1,create.arg2):0.0\n']], 'Types': [['(3,2)', 'family.guy:0.0\n'], ['(3,3)', 'guy:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <create> <Guy>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/create> <http://dbpedia.org/resource/Guy>}'
How many people live in Poland?	{'Semantic Parse': ' [QUESTION(0:x), people(2:s , 2:x), how(0:s , 0:x), arg0(5:e , 5:m.Poland), live.arg1(3:e , 2:x), live.nmod.in(3:e , 5:m.Poland), people.arg0(2:e , 2:x), COUNT(2:x , 0:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, people, people, NOUN, null}\n', '{3, live, live, VERB, null}\n', '{5, Poland, poland, PROPN, null}\n'], 'Edges': [['(3,2,5)', '(live.arg1,live.nmod.in):0.0\n']], 'Types': [['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n'], ['(2,2)', 'people:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {?x2 <live> <Poland>}	'SELECT DISTINCT ?x0 ?x2  WHERE {?x2 <http://dbpedia.org/property/live> <http://dbpedia.org/resource/Let_Poland_be_Poland>}'
To which party does the mayor of Paris belong?	{'Semantic Parse': ' [belong.arg1(8:e , 5:m.mayor), party(2:s , 2:x), belong.nmod.to(8:e , 2:x), which(1:s , 2:x), nmod.of(5:e , 7:m.Paris), QUESTION(2:x), arg0(7:e , 7:m.Paris), party.arg0(2:e , 2:x), arg0(5:e , 5:m.mayor)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, party, party, NOUN, null}\n', '{5, mayor, mayor, PROPN, null}\n', '{7, Paris, paris, PROPN, null}\n', '{8, belong, belong, VERB, null}\n'], 'Edges': [['(5,5,7)', '(arg0,nmod.of):0.0\n'], ['(8,5,2)', '(belong.arg1,belong.nmod.to):0.0\n']], 'Types': [['(2,2)', 'party:0.0\n'], ['(2,1)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<mayor> <belong> ?x2 . <mayor> <arg0> <Paris>}	'SELECT DISTINCT ?x2  WHERE {<http://dbpedia.org/resource/Mayor> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Paris
Who does the voice of Bart Simpson?	{'Semantic Parse': ' [arg0(6:e , 6:m.Bart_Simpson), QUESTION(0:x), who.arg0(0:e , 0:x), nmod.of(3:e , 6:m.Bart_Simpson), who(0:s , 0:x), arg0(3:e , 3:m.voice), do.arg2(1:e , 3:m.voice)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, voice, voice, PROPN, null}\n', '{6, Simpson, simpson, PROPN, null}\n'], 'Edges': [['(3,3,6)', '(arg0,nmod.of):0.0\n']], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<voice> <arg0> <Simpson>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/The_Voice_(1992_film)> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Simpson>}'
Who composed the soundtrack for Cameron's Titanic?	"{'Semantic Parse': "" [arg0(7:e , 7:m.titanic), QUESTION(0:x), nmod.'s(7:e , 5:m.Cameron), soundtrack.arg0(3:e , 3:x), soundtrack.nmod.for(3:e , 7:m.titanic), compose.arg2(1:e , 3:x), compose.arg1(1:e , 0:x), soundtrack(3:s , 3:x), who(0:s , 0:x), arg0(5:e , 5:m.Cameron)]\n"", 'nodes': ['{0, Who, who, PRON, null}\n', '{1, composed, compose, VERB, null}\n', '{3, soundtrack, soundtrack, NOUN, null}\n', '{5, Cameron, cameron, PROPN, null}\n', '{7, Titanic, titanic, PROPN, null}\n'], 'Edges': [['(7,7,5)', ""(arg0,nmod.'s):0.0\n""], ['(1,0,3)', '(compose.arg1,compose.arg2):0.0\n'], ['(3,7,3)', '(soundtrack.nmod.for,soundtrack.arg0):0.0\n']], 'Types': [['(3,3)', 'soundtrack:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}"	SELECT DISTINCT ?x0  WHERE {<Titanic> <soundtrack> <soundtrack> . ?x0 <compose> <soundtrack> . <Titanic> <arg0> <Cameron>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Titanic
When did Boris Becker end his active career?	{'Semantic Parse': ' [career.nmod(7:e , 5:x), QUESTION(0:x), end(4:s , 4:x), end.arg2(4:e , 7:x), his(5:s , 5:x), career.arg0(7:e , 7:x), when(0:s , 0:x), active(6:s , 7:x), end.arg0(4:e , 4:x), career(7:s , 7:x), end.advmod(4:e , 0:x), end.arg1(4:e , 3:m.Boris_Becker)]\n', 'nodes': ['{0, When, when, ADV, null}\n', '{3, Becker, becker, PROPN, null}\n', '{4, end, end, NOUN, null}\n', '{5, his, he, PRON, null}\n', '{6, active, active, ADJ, null}\n', '{7, career, career, NOUN, null}\n'], 'Edges': [['(7,7,5)', '(career.arg0,career.nmod):0.0\n'], ['(4,0,4)', '(end.advmod,end.arg0):0.0\n'], ['(4,3,0)', '(end.arg1,end.advmod):0.0\n'], ['(4,3,4)', '(end.arg1,end.arg0):0.0\n'], ['(4,3,7)', '(end.arg1,end.arg2):0.0\n'], ['(4,7,0)', '(end.arg2,end.advmod):0.0\n'], ['(4,7,4)', '(end.arg2,end.arg0):0.0\n']], 'Types': [['(7,6)', 'active:0.0\n'], ['(7,7)', 'career:0.0\n'], ['(4,4)', 'end:0.0\n'], ['(5,5)', 'his:0.0\n'], ['(0,0)', 'when:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <end> <end> . <Becker> <end> <career> . <career> <career> <his> . <Becker> <end> ?x0 . <Becker> <end> <end> . <career> <end> ?x0 . <career> <end> <end>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Career_Moves> <http://dbpedia.org/property/end> <http://dbpedia.org/resource/Endoglin> . <http://dbpedia.org/resource/Career_consolidation> <http://dbpedia.org/property/end> ?x0 . <http://dbpedia.org/resource/Marty_Becker> <http://dbpedia.org/property/end> <http://dbpedia.org/resource/Career_consolidation> . <http://dbpedia.org/resource/Jakob_Becker> <http://dbpedia.org/property/end> ?x0 . ?x0 <http://dbpedia.org/property/end> <http://dbpedia.org/resource/End_on_End> . <http://dbpedia.org/resource/Career_Moves> <http://dbpedia.org/property/careerL> <http://dbpedia.org/resource/Hospital_information_system> . <http://dbpedia.org/resource/Jakob_Becker> <http://dbpedia.org/property/end> <http://dbpedia.org/resource/End_on_End>}'
Show me all basketball players that are higher than 2 meters.	{'Semantic Parse': ' [meters(10:s , 10:x), players(4:s , 4:x), higher.nmod.than(7:e , 10:x), meter.arg0(10:e , 10:x), basketball.players(3:s , 4:x), higher.arg1(7:e , 4:x), me(1:s , 4:x), player.arg0(4:e , 4:x)]\n', 'nodes': ['{1, me, i, PRON, null}\n', '{3, basketball, basketball, NOUN, null}\n', '{4, players, player, NOUN, null}\n', '{7, higher, higher, ADJ, null}\n', '{10, meters, meter, NOUN, null}\n'], 'Edges': [['(7,10,4)', '(higher.nmod.than,higher.arg1):0.0\n']], 'Types': [['(4,3)', 'basketball.players:0.0\n'], ['(4,1)', 'me:0.0\n'], ['(10,10)', 'meters:0.0\n'], ['(4,4)', 'players:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<meters> <higher> <players>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Metre> <http://dbpedia.org/property/higherSecondary> <http://dbpedia.org/resource/Players>}'
What country is Sitecore from?	{'Semantic Parse': ' [what(0:s , 1:x), country.arg0(1:e , 1:x), country(1:s , 1:x), QUESTION(1:x)]\n', 'nodes': ['{0, What, what, DET, null}\n', '{1, country, country, NOUN, null}\n'], 'Edges': [], 'Types': [['(1,1)', 'country:0.0\n'], ['(1,0)', 'what:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {}	'SELECT DISTINCT ?x1  WHERE {}'
Which country was Bill Gates born in?	{'Semantic Parse': ' [be.arg1(2:e , 4:m.Bill_Gates), bear.nmod(5:e , 4:m.Bill_Gates), arg0(4:e , 4:m.Bill_Gates), be.arg2(2:e , 1:x), country.arg0(1:e , 1:x), country(1:s , 1:x), QUESTION(1:x), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, country, country, NOUN, null}\n', '{2, was, be, VERB, null}\n', '{4, Gates, gates, PROPN, null}\n'], 'Edges': [['(2,4,1)', '(be.arg1,be.arg2):0.0\n']], 'Types': [['(1,1)', 'country:0.0\n'], ['(1,0)', 'which:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<Gates> <arg1> ?x1}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Melinda_Gates> <http://dbpedia.org/property/poverty> ?x1}'
Who developed Slack?	{'Semantic Parse': ' [develop.arg1(1:e , 0:x), QUESTION(0:x), who(0:s , 0:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n'], 'Edges': [], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {}	'SELECT DISTINCT ?x0  WHERE {}'
In which city did Nikos Kazantzakis die?	{'Semantic Parse': ' [city(2:s , 2:x), which(1:s , 2:x), city.arg0(2:e , 2:x), die.arg1(6:e , 5:m.Nikos_Kazantzakis), QUESTION(2:x), die.nmod.in(6:e , 2:x)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, city, city, NOUN, null}\n', '{5, Kazantzakis, kazantzakis, PROPN, null}\n', '{6, die, die, VERB, null}\n'], 'Edges': [['(6,2,5)', '(die.nmod.in,die.arg1):0.0\n']], 'Types': [['(2,2)', 'city:0.0\n'], ['(2,1)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {?x2 <die> <Kazantzakis>}	'SELECT DISTINCT ?x2  WHERE {?x2 <http://dbpedia.org/property/die> <http://dbpedia.org/resource/Nikos_Kazantzakis>}'
How many grand-children did Jacques Cousteau have?	{'Semantic Parse': ' [have.arg1(6:e , 5:m.Jacques_Cousteau), QUESTION(0:x), have.arg2(6:e , 2:x), how(0:s , 0:x), grand-child.arg0(2:e , 2:x), COUNT(2:x , 0:x), grand-children(2:s , 2:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, grand-children, grand-child, NOUN, null}\n', '{5, Cousteau, cousteau, PROPN, null}\n', '{6, have, have, VERB, null}\n'], 'Edges': [['(6,5,2)', '(have.arg1,have.arg2):0.0\n']], 'Types': [['(2,2)', 'grand-children:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {<Cousteau> <arg1> ?x2}	'SELECT DISTINCT ?x0 ?x2  WHERE {<http://dbpedia.org/resource/Cousteau> <http://dbpedia.org/property/poverty> ?x2}'
Which films did Stanley Kubrick direct?	{'Semantic Parse': ' [films(1:s , 1:x), direct.arg1(5:e , 4:m.Stanley_Kubrick), direct.arg2(5:e , 1:x), QUESTION(1:x), film.arg0(1:e , 1:x), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, films, film, NOUN, null}\n', '{4, Kubrick, kubrick, PROPN, null}\n', '{5, direct, direct, VERB, null}\n'], 'Edges': [['(5,4,1)', '(direct.arg1,direct.arg2):0.0\n']], 'Types': [['(1,1)', 'films:0.0\n'], ['(1,0)', 'which:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<Kubrick> <direct> ?x1}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Stanley_Kubrick> <http://dbpedia.org/property/direct> ?x1}'
Does Neymar play for Real Madrid?	{'Semantic Parse': ' [play.arg1(2:e , 1:m.neymar), play.nmod.for(2:e , 5:m.Real_Madrid), arg0(5:e , 5:m.Real_Madrid)]\n', 'nodes': ['{1, Neymar, neymar, PROPN, null}\n', '{2, play, play, VERB, null}\n', '{5, Madrid, madrid, PROPN, null}\n'], 'Edges': [['(2,5,1)', '(play.nmod.for,play.arg1):0.0\n']], 'Types': [], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<Madrid> <play> <Neymar>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Madrid> <http://dbpedia.org/property/play> <http://dbpedia.org/resource/Neymar>}'
How many seats does the home stadium of FC Porto have?	{'Semantic Parse': ' [have.arg2(10:e , 2:x), QUESTION(0:x), how(0:s , 0:x), have.arg1(10:e , 6:x), seat.arg0(2:e , 2:x), COUNT(2:x , 0:x), many(1:s , 2:x), home.stadium(5:s , 6:x), stadium.nmod.of(6:e , 9:m.FC_Porto), arg0(9:e , 9:m.FC_Porto), stadium(6:s , 6:x), stadium.arg0(6:e , 6:x), seats(2:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, seats, seat, NOUN, null}\n', '{5, home, home, NOUN, null}\n', '{6, stadium, stadium, NOUN, null}\n', '{9, Porto, porto, PROPN, null}\n', '{10, have, have, VERB, null}\n'], 'Edges': [['(10,6,2)', '(have.arg1,have.arg2):0.0\n'], ['(6,9,6)', '(stadium.nmod.of,stadium.arg0):0.0\n']], 'Types': [['(6,5)', 'home.stadium:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n'], ['(2,2)', 'seats:0.0\n'], ['(6,6)', 'stadium:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {<Porto> <stadium> <stadium> . <stadium> <arg1> ?x2}	'SELECT DISTINCT ?x0 ?x2  WHERE {<http://dbpedia.org/resource/Porto> <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Stadium> . <http://dbpedia.org/resource/Stadium> <http://dbpedia.org/property/poverty> ?x2}'
Show me all books in Asimov's Foundation series.	"{'Semantic Parse': "" [series(8:s , 8:x), book.arg0(3:e , 3:x), series.arg0(8:e , 8:x), arg0(5:e , 5:m.Asimov), series.nmod.'s(8:e , 5:m.Asimov), book.nmod.in(3:e , 8:x), me(1:s , 3:x), books(3:s , 3:x), series.compound(8:e , 7:m.foundation)]\n"", 'nodes': ['{1, me, i, PRON, null}\n', '{3, books, book, NOUN, null}\n', '{5, Asimov, asimov, PROPN, null}\n', '{7, Foundation, foundation, PROPN, null}\n', '{8, series, series, NOUN, null}\n'], 'Edges': [['(3,3,8)', '(book.arg0,book.nmod.in):0.0\n'], ['(8,8,5)', ""(series.arg0,series.nmod.'s):0.0\n""], ['(8,7,8)', '(series.compound,series.arg0):0.0\n'], ['(8,7,5)', ""(series.compound,series.nmod.'s):0.0\n""]], 'Types': [['(3,3)', 'books:0.0\n'], ['(3,1)', 'me:0.0\n'], ['(8,8)', 'series:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}"	SELECT DISTINCT   WHERE {<Foundation> <series> <series> . <Foundation> <series> <Asimov> . <series> <series> <Asimov> . <books> <book> <series>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Book> <http://dbpedia.org/property/book> <http://dbpedia.org/resource/Media_franchise> . <http://dbpedia.org/resource/Media_franchise> <http://dbpedia.org/property/seriesA> <http://dbpedia.org/resource/Isaac_Asimov> . <http://dbpedia.org/resource/Bed_base> <http://dbpedia.org/property/seriesNo> <http://dbpedia.org/resource/Series> . <http://dbpedia.org/resource/Bed_base> <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Eric_Asimov>}'
Which movies star both Liz Taylor and Richard Burton?	{'Semantic Parse': ' [star.arg2(2:e , 8:m.Richard_Burton), star.arg1(2:e , 1:x), arg0(5:e , 5:m.Liz_Taylor), star.arg0(2:e , 2:x), QUESTION(1:x), movies(1:s , 1:x), star(2:s , 2:x), movie.arg0(1:e , 1:x), star.arg2(2:e , 5:m.Liz_Taylor), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, movies, movie, NOUN, null}\n', '{2, star, star, NOUN, null}\n', '{5, Taylor, taylor, PROPN, null}\n', '{8, Burton, burton, PROPN, null}\n'], 'Edges': [['(2,2,1)', '(star.arg0,star.arg1):0.0\n'], ['(2,2,5)', '(star.arg0,star.arg2):0.0\n'], ['(2,1,5)', '(star.arg1,star.arg2):0.0\n'], ['(2,8,2)', '(star.arg2,star.arg0):0.0\n'], ['(2,8,1)', '(star.arg2,star.arg1):0.0\n'], ['(2,8,5)', '(star.arg2,star.arg2):0.0\n']], 'Types': [['(1,1)', 'movies:0.0\n'], ['(2,2)', 'star:0.0\n'], ['(1,0)', 'which:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<star> <star> <Taylor> . ?x1 <star> <Taylor> . <star> <star> ?x1 . <Burton> <star> ?x1 . <Burton> <star> <star> . <Burton> <star> <Taylor>}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Burton> <http://dbpedia.org/property/star> <http://dbpedia.org/resource/Taylor> . <http://dbpedia.org/resource/Star> <http://dbpedia.org/property/star> <http://dbpedia.org/resource/Taylor> . <http://dbpedia.org/resource/Burton> <http://dbpedia.org/property/star> ?x1 . <http://dbpedia.org/resource/Burton> <http://dbpedia.org/property/star> <http://dbpedia.org/resource/Star_Star> . ?x1 <http://dbpedia.org/property/star> <http://dbpedia.org/resource/Gwen_Taylor> . <http://dbpedia.org/resource/Star> <http://dbpedia.org/property/star> ?x1}'
In which city are the headquarters of the United Nations?	{'Semantic Parse': ' [headquarters(5:s , 5:x), city(2:s , 2:x), arg0(9:e , 9:m.United_Nations), be.nmod.in(3:e , 2:x), which(1:s , 2:x), city.arg0(2:e , 2:x), headquarters.arg0(5:e , 5:x), QUESTION(2:x), headquarters.nmod.of(5:e , 9:m.United_Nations), be.arg1(3:e , 5:x)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, city, city, NOUN, null}\n', '{3, are, be, VERB, null}\n', '{5, headquarters, headquarters, NOUN, null}\n', '{9, Nations, nations, PROPN, null}\n'], 'Edges': [['(3,5,2)', '(be.arg1,be.nmod.in):0.0\n'], ['(5,9,5)', '(headquarters.nmod.of,headquarters.arg0):0.0\n']], 'Types': [['(2,2)', 'city:0.0\n'], ['(5,5)', 'headquarters:0.0\n'], ['(2,1)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<Nations> <headquarters> <headquarters> . <headquarters> <arg1> ?x2}	'SELECT DISTINCT ?x2  WHERE {<http://dbpedia.org/resource/Headquarters> <http://dbpedia.org/property/poverty> ?x2 . <http://dbpedia.org/resource/Allied_Nations> <http://dbpedia.org/property/fHeadquarters> <http://dbpedia.org/resource/Führer_Headquarters>}'
In which city was the president of Montenegro born?	{'Semantic Parse': ' [arg0(5:e , 5:m.president), city(2:s , 2:x), nmod.in(5:e , 2:x), nmod.of(5:e , 7:m.Montenegro), which(1:s , 2:x), city.arg0(2:e , 2:x), arg0(7:e , 7:m.Montenegro), QUESTION(2:x), bear.arg1(8:e , 7:m.Montenegro)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, city, city, NOUN, null}\n', '{5, president, president, PROPN, null}\n', '{7, Montenegro, montenegro, PROPN, null}\n'], 'Edges': [['(5,5,2)', '(arg0,nmod.in):0.0\n'], ['(5,5,7)', '(arg0,nmod.of):0.0\n'], ['(5,2,7)', '(nmod.in,nmod.of):0.0\n']], 'Types': [['(2,2)', 'city:0.0\n'], ['(2,1)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<president> <arg0> ?x2 . <president> <arg0> <Montenegro> . ?x2 <nmod> <Montenegro>}	'SELECT DISTINCT ?x2  WHERE {?x2 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Julián_Montenegro> . <http://dbpedia.org/resource/President> <http://dbpedia.org/property/poverty> ?x2 . <http://dbpedia.org/resource/President> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Montenegro>}'
Which writers studied in Istanbul?	{'Semantic Parse': ' [study.arg1(2:e , 1:x), arg0(4:e , 4:m.Istanbul), study.nmod.in(2:e , 4:m.Istanbul), writer.arg0(1:e , 1:x), writers(1:s , 1:x), QUESTION(1:x), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, writers, writer, NOUN, null}\n', '{2, studied, study, VERB, null}\n', '{4, Istanbul, istanbul, PROPN, null}\n'], 'Edges': [['(2,1,4)', '(study.arg1,study.nmod.in):0.0\n']], 'Types': [['(1,0)', 'which:0.0\n'], ['(1,1)', 'writers:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {?x1 <study> <Istanbul>}	'SELECT DISTINCT ?x1  WHERE {?x1 <http://dbpedia.org/property/study> <http://dbpedia.org/resource/Istanbul>}'
Who is the mayor of Paris?	{'Semantic Parse': ' [arg0(5:e , 5:m.Paris), QUESTION(0:x), arg0(3:e , 3:m.mayor), who.arg0(0:e , 0:x), who.arg1(0:e , 3:m.mayor), who(0:s , 0:x), nmod.of(3:e , 5:m.Paris)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, mayor, mayor, PROPN, null}\n', '{5, Paris, paris, PROPN, null}\n'], 'Edges': [['(3,3,5)', '(arg0,nmod.of):0.0\n'], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <mayor> . <mayor> <arg0> <Paris>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Mayor> . <http://dbpedia.org/resource/Syndic> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Paris
What is the full name of Prince Charles?	{'Semantic Parse': ' [arg0(7:e , 7:m.Charles), QUESTION(0:x), name.arg0(4:e , 4:x), name(4:s , 4:x), what.arg1(0:e , 4:x), name.nmod.of(4:e , 7:m.Charles), prince(6:s , 7:m.Charles), what(0:s , 0:x), full(3:s , 4:x), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, full, full, ADJ, null}\n', '{4, name, name, NOUN, null}\n', '{6, Prince, prince, PROPN, null}\n', '{7, Charles, charles, PROPN, null}\n'], 'Edges': [['(4,7,4)', '(name.nmod.of,name.arg0):0.0\n'], ['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(4,3)', 'full:0.0\n'], ['(4,4)', 'name:0.0\n'], ['(7,6)', 'prince:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <name> . <Charles> <name> <name>}	"""SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Christian_name> . <http://dbpedia.org/resource/Charles_%22Chic%22_Sale> <http://dbpedia.org/property/'''name> <http://dbpedia.org/resource/.name>}"""
What is the longest river in China?	{'Semantic Parse': ' [QUESTION(0:x), what.arg1(0:e , 4:x), what(0:s , 0:x), river(4:s , 4:x), arg0(6:e , 6:m.China), river.nmod.in(4:e , 6:m.China), longest(3:s , 4:x), river.arg0(4:e , 4:x), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, longest, longest, ADJ, null}\n', '{4, river, river, NOUN, null}\n', '{6, China, china, PROPN, null}\n'], 'Edges': [['(4,6,4)', '(river.nmod.in,river.arg0):0.0\n'], ['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(4,3)', 'longest:0.0\n'], ['(4,4)', 'river:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<China> <river> <river> . ?x0 <arg0> <river>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/River> . <http://dbpedia.org/resource/China> <http://dbpedia.org/property/river> <http://dbpedia.org/resource/River>}'
Who discovered Ceres?	{'Semantic Parse': ' [QUESTION(0:x), discover.arg2(1:e , 2:m.Ceres), discover.arg1(1:e , 0:x), who(0:s , 0:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, discovered, discover, VERB, null}\n', '{2, Ceres, ceres, NOUN, null}\n'], 'Edges': [['(1,0,2)', '(discover.arg1,discover.arg2):0.0\n']], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <discover> <Ceres>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/locate> <http://dbpedia.org/resource/HMS_Ceres>}'
When did princess Diana die?	{'Semantic Parse': ' [QUESTION(0:x), arg0(3:e , 3:m.Diana), die.advmod(4:e , 0:x), princess(2:s , 3:m.Diana), when(0:s , 0:x), die.arg1(4:e , 3:m.Diana)]\n', 'nodes': ['{0, When, when, ADV, null}\n', '{2, princess, princess, NOUN, null}\n', '{3, Diana, diana, PROPN, null}\n', '{4, die, die, VERB, null}\n'], 'Edges': [['(4,0,3)', '(die.advmod,die.arg1):0.0\n']], 'Types': [['(3,2)', 'princess:0.0\n'], ['(0,0)', 'when:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <die> <Diana>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/fail> <http://dbpedia.org/resource/Diana_Sailplanes_Diana>}'
What do ants eat?	{'Semantic Parse': ' [ants(2:s , 2:x), QUESTION(0:x), what(0:s , 0:x), eat.arg2(3:e , 0:x), eat.arg1(3:e , 2:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{2, ants, ant, NOUN, null}\n', '{3, eat, eat, VERB, null}\n'], 'Edges': [['(3,2,0)', '(eat.arg1,eat.arg2):0.0\n']], 'Types': [['(2,2)', 'ants:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<ants> <eat> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Australian_ants> <http://dbpedia.org/property/finish> ?x0}'
Who is the host of the BBC Wildlife Specials?	{'Semantic Parse': ' [host.nmod.of(3:e , 8:m.BBC_Wildlife_Specials), QUESTION(0:x), who.arg0(0:e , 0:x), arg0(8:e , 8:m.BBC_Wildlife_Specials), host(3:s , 3:x), host.arg0(3:e , 3:x), who(0:s , 0:x), who.arg1(0:e , 3:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, host, host, NOUN, null}\n', '{8, Specials, specials, NOUN, null}\n'], 'Edges': [['(3,8,3)', '(host.nmod.of,host.arg0):0.0\n'], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(3,3)', 'host:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <host> . <Specials> <host> <host>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Host> . <http://dbpedia.org/resource/Specials> <http://dbpedia.org/property/host> <http://dbpedia.org/resource/Host>}'
How many moons does Mars have?	{'Semantic Parse': ' [QUESTION(0:x), how(0:s , 0:x), have.arg2(5:e , 2:x), moon.arg0(2:e , 2:x), COUNT(2:x , 0:x), have.arg1(5:e , 4:m.Mars), moons(2:s , 2:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, moons, moon, NOUN, null}\n', '{4, Mars, mars, PROPN, null}\n', '{5, have, have, VERB, null}\n'], 'Edges': [['(5,4,2)', '(have.arg1,have.arg2):0.0\n']], 'Types': [['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n'], ['(2,2)', 'moons:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {<Mars> <arg1> ?x2}	'SELECT DISTINCT ?x0 ?x2  WHERE {<http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/poverty> ?x2}'
What was the first Queen album?	{'Semantic Parse': ' [QUESTION(0:x), first(3:s , 5:m.album), what(0:s , 0:x), queen(4:s , 5:m.album), what.arg0(0:e , 0:x), arg0(5:e , 5:m.album), what.arg1(0:e , 5:m.album)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, first, first, ADJ, null}\n', '{4, Queen, queen, PROPN, null}\n', '{5, album, album, PROPN, null}\n'], 'Edges': [['(0,0,5)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(5,3)', 'first:0.0\n'], ['(5,4)', 'queen:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <album>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Album_Album>}'
Did Elvis Presley have children?	{'Semantic Parse': ' [children(4:s , 4:x), have.arg2(3:e , 4:x), have.arg1(3:e , 2:m.Elvis_Presley)]\n', 'nodes': ['{2, Presley, presley, PROPN, null}\n', '{3, have, have, VERB, null}\n', '{4, children, child, NOUN, null}\n'], 'Edges': [['(3,4,2)', '(have.arg2,have.arg1):0.0\n']], 'Types': [['(4,4)', 'children:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<children> <arg2> <Presley>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/The_Children_(1990_film)> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Presley_Spruance>}'
Give me a list of all Canadians that reside in the U.S.	{'Semantic Parse': ' [reside.nmod.in(8:e , 11:m.U.S.), list.arg0(3:e , 3:x), give.iobj(0:e , 1:x), give.arg2(0:e , 3:x), arg0(11:e , 11:m.U.S.), arg0(6:e , 6:m.Canadians), list(3:s , 3:x), list.nmod.of(3:e , 6:m.Canadians), reside.arg2(8:e , 6:m.Canadians), QUESTION(3:x), me(1:s , 1:x)]\n', 'nodes': ['{0, Give, give, VERB, null}\n', '{1, me, i, PRON, null}\n', '{3, list, list, NOUN, null}\n', '{6, Canadians, canadians, PROPN, null}\n', '{8, reside, reside, VERB, null}\n', '{11, U.S., u.s., PROPN, null}\n'], 'Edges': [['(0,3,1)', '(give.arg2,give.iobj):0.0\n'], ['(3,3,6)', '(list.arg0,list.nmod.of):0.0\n'], ['(8,11,6)', '(reside.nmod.in,reside.arg2):0.0\n']], 'Types': [['(3,3)', 'list:0.0\n'], ['(1,1)', 'me:0.0\n']], 'Properties': [['3', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x3  WHERE {?x3 <give> <me> . ?x3 <list> <Canadians> . <U.S.> <reside> <Canadians>}	'SELECT DISTINCT ?x3  WHERE {<http://dbpedia.org/resource/U.S._Klans> <http://dbpedia.org/property/resist> <http://dbpedia.org/resource/Slovak_Canadians> . ?x3 <http://dbpedia.org/property/lead> <http://dbpedia.org/resource/Montenegro> . ?x3 <http://dbpedia.org/property/list> <http://dbpedia.org/resource/Swiss_Canadians>}'
Where is Syngman Rhee buried?	{'Semantic Parse': ' [QUESTION(0:x), bury.arg2(4:e , 3:m.Syngman_Rhee), where(0:s , 0:x), bury.advmod(4:e , 0:x)]\n', 'nodes': ['{0, Where, where, ADV, null}\n', '{3, Rhee, rhee, PROPN, null}\n', '{4, buried, bury, VERB, null}\n'], 'Edges': [['(4,3,0)', '(bury.arg2,bury.advmod):0.0\n']], 'Types': [['(0,0)', 'where:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Rhee> <bury> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Rhee> <http://dbpedia.org/property/hide> ?x0}'
In which countries do people speak Japanese?	{'Semantic Parse': ' [countries(2:s , 2:x), speak.nmod.in(5:e , 2:x), speak.arg1(5:e , 4:x), which(1:s , 2:x), people(4:s , 4:x), QUESTION(2:x), country.arg0(2:e , 2:x)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, countries, country, NOUN, null}\n', '{4, people, people, NOUN, null}\n', '{5, speak, speak, VERB, null}\n'], 'Edges': [['(5,2,4)', '(speak.nmod.in,speak.arg1):0.0\n']], 'Types': [['(2,2)', 'countries:0.0\n'], ['(4,4)', 'people:0.0\n'], ['(2,1)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {?x2 <speak> <people>}	'SELECT DISTINCT ?x2  WHERE {?x2 <http://dbpedia.org/property/sound> <http://dbpedia.org/resource/People!>}'
Who is the king of the Netherlands?	{'Semantic Parse': ' [king(3:s , 3:x), QUESTION(0:x), who.arg0(0:e , 0:x), king.nmod.of(3:e , 6:m.Netherlands), who(0:s , 0:x), who.arg1(0:e , 3:x), king.arg0(3:e , 3:x), arg0(6:e , 6:m.Netherlands)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, king, king, NOUN, null}\n', '{6, Netherlands, netherlands, PROPN, null}\n'], 'Edges': [['(3,6,3)', '(king.nmod.of,king.arg0):0.0\n'], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(3,3)', 'king:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <king> . <Netherlands> <king> <king>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/King_King> . <http://dbpedia.org/resource/Netherlands> <http://dbpedia.org/property/big> <http://dbpedia.org/resource/King_King>}'
When did the Dodo become extinct?	{'Semantic Parse': ' [dodo(3:s , 3:x), QUESTION(0:x), dodo.arg0(3:e , 3:x), become.xcomp(4:e , 5:e), when(0:s , 0:x), become.advmod(4:e , 0:x), become.arg1(4:e , 3:x), extinct.arg1(5:e , 3:x)]\n', 'nodes': ['{0, When, when, ADV, null}\n', '{3, Dodo, dodo, NOUN, null}\n', '{4, become, become, VERB, null}\n', '{5, extinct, extinct, ADJ, null}\n'], 'Edges': [['(4,3,0)', '(become.arg1,become.advmod):0.0\n']], 'Types': [['(3,3)', 'dodo:0.0\n'], ['(0,0)', 'when:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': [['(4,5)', 'become.xcomp:0.0\n']]}	SELECT DISTINCT ?x0  WHERE {<Dodo> <become> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Dodo> <http://dbpedia.org/property/became> ?x0}'
Show me all Czech movies.	{'Semantic Parse': ' [i.arg0(1:e , 1:x), movie.arg1(4:e , 1:x), movies(4:s , 3:m.Czech), me(1:s , 1:x), movie.arg0(4:e , 3:m.Czech)]\n', 'nodes': ['{1, me, i, PRON, null}\n', '{3, Czech, czech, PROPN, null}\n', '{4, movies, movie, NOUN, null}\n'], 'Edges': [['(4,1,3)', '(movie.arg1,movie.arg0):0.0\n']], 'Types': [['(1,1)', 'me:0.0\n'], ['(3,4)', 'movies:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<me> <movie> <Czech>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Montenegro> <http://dbpedia.org/property/movie> <http://dbpedia.org/resource/Czech_Vašek>}'
Which rivers flow into the North Sea?	{'Semantic Parse': ' [flow.arg1(2:e , 1:m.river), flow.nmod.into(2:e , 6:m.North_Sea), which(0:s , 1:m.river), arg0(6:e , 6:m.North_Sea), arg0(1:e , 1:m.river)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, rivers, river, PROPN, null}\n', '{2, flow, flow, VERB, null}\n', '{6, Sea, sea, PROPN, null}\n'], 'Edges': [['(2,1,6)', '(flow.arg1,flow.nmod.into):0.0\n']], 'Types': [['(1,0)', 'which:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<rivers> <flow> <Sea>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/River> <http://dbpedia.org/property/flow> <http://dbpedia.org/resource/Sea_to_Sea>}'
When did Operation Overlord commence?	{'Semantic Parse': ' [QUESTION(0:x), commence.arg1(4:e , 3:m.Operation_Overlord), commence.advmod(4:e , 0:x), when(0:s , 0:x)]\n', 'nodes': ['{0, When, when, ADV, null}\n', '{3, Overlord, overlord, NOUN, null}\n', '{4, commence, commence, VERB, null}\n'], 'Edges': [['(4,3,0)', '(commence.arg1,commence.advmod):0.0\n']], 'Types': [['(0,0)', 'when:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Overlord> <commence> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Overlord> <http://dbpedia.org/property/commence> ?x0}'
Where do the Red Sox play?	{'Semantic Parse': ' [arg0(4:e , 4:m.Red_Sox), QUESTION(0:x), where(0:s , 0:x), play.advmod(5:e , 0:x), play.arg1(5:e , 4:m.Red_Sox)]\n', 'nodes': ['{0, Where, where, ADV, null}\n', '{4, Sox, sox, PROPN, null}\n', '{5, play, play, VERB, null}\n'], 'Edges': [['(5,0,4)', '(play.advmod,play.arg1):0.0\n']], 'Types': [['(0,0)', 'where:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <play> <Sox>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/play> <http://dbpedia.org/resource/Chicago_White_Sox>}'
In which time zone is Rome?	{'Semantic Parse': ' [which(1:s , 3:x), zone(3:s , 3:x), be.arg1(4:e , 5:m.Rome), QUESTION(3:x), time.zone(2:s , 3:x), be.nmod.in(4:e , 3:x), zone.arg0(3:e , 3:x)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, time, time, NOUN, null}\n', '{3, zone, zone, NOUN, null}\n', '{4, is, be, VERB, null}\n', '{5, Rome, rome, PROPN, null}\n'], 'Edges': [['(4,5,3)', '(be.arg1,be.nmod.in):0.0\n']], 'Types': [['(3,2)', 'time.zone:0.0\n'], ['(3,1)', 'which:0.0\n'], ['(3,3)', 'zone:0.0\n']], 'Properties': [['3', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x3  WHERE {<Rome> <arg1> ?x3}	'SELECT DISTINCT ?x3  WHERE {<http://dbpedia.org/resource/Rome> <http://dbpedia.org/property/poverty> ?x3}'
Give me a list of all critically endangered birds.	{'Semantic Parse': ' [birds(8:s , 8:x), endangered(7:s , 8:x), bird.arg0(8:e , 8:x), list.arg0(3:e , 3:x), give.iobj(0:e , 1:x), list.nmod.of(3:e , 8:x), give.arg2(0:e , 3:x), list(3:s , 3:x), QUESTION(3:x), me(1:s , 1:x), critically(6:s , 8:e)]\n', 'nodes': ['{0, Give, give, VERB, null}\n', '{1, me, i, PRON, null}\n', '{3, list, list, NOUN, null}\n', '{6, critically, critically, ADV, null}\n', '{7, endangered, endanger, ADJ, null}\n', '{8, birds, bird, NOUN, null}\n'], 'Edges': [['(0,3,1)', '(give.arg2,give.iobj):0.0\n'], ['(3,8,3)', '(list.nmod.of,list.arg0):0.0\n']], 'Types': [['(8,8)', 'birds:0.0\n'], ['(8,7)', 'endangered:0.0\n'], ['(3,3)', 'list:0.0\n'], ['(1,1)', 'me:0.0\n']], 'Properties': [['3', '[QUESTION]\n']], 'EventTypes': [['(8,6)', 'critically:0.0\n']], 'EventEventModifiers': []}	SELECT DISTINCT ?x3  WHERE {<birds> <list> ?x3 . ?x3 <give> <me>}	'SELECT DISTINCT ?x3  WHERE {?x3 <http://dbpedia.org/property/lead> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Bird> <http://dbpedia.org/property/list1.> ?x3}'
How much did the Lego Movie cost?	{'Semantic Parse': ' [cost.arg0(6:e , 6:x), QUESTION(0:x), cost.arg1(6:e , 5:x), how(0:s , 0:x), much(1:s , 6:x), movie.compound(5:e , 4:m.lego), movie(5:s , 5:x), cost.advmod(6:e , 0:x), movie.arg0(5:e , 5:x), cost(6:s , 6:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, much, much, ADJ, null}\n', '{4, Lego, lego, PROPN, null}\n', '{5, Movie, movie, NOUN, null}\n', '{6, cost, cost, NOUN, null}\n'], 'Edges': [['(6,6,0)', '(cost.arg0,cost.advmod):0.0\n'], ['(6,6,5)', '(cost.arg0,cost.arg1):0.0\n'], ['(6,5,0)', '(cost.arg1,cost.advmod):0.0\n'], ['(5,5,4)', '(movie.arg0,movie.compound):0.0\n']], 'Types': [['(6,6)', 'cost:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(5,5)', 'movie:0.0\n'], ['(6,1)', 'much:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Movie> <cost> ?x0 . <cost> <cost> <Movie> . <cost> <cost> ?x0 . <Movie> <movie> <Lego>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Manufacturing_cost> <http://dbpedia.org/property/cost.> ?x0 . <http://dbpedia.org/resource/A_Movie> <http://dbpedia.org/property/cost.> ?x0 . <http://dbpedia.org/resource/Cost> <http://dbpedia.org/property/cost.> <http://dbpedia.org/resource/Movie_Movie> . <http://dbpedia.org/resource/A_Movie> <http://dbpedia.org/property/movie> <http://dbpedia.org/resource/Lego>}'
What was the original occupation of the inventor of Lego?	{'Semantic Parse': ' [QUESTION(0:x), inventor(7:s , 7:x), occupation.arg0(4:e , 4:x), what.arg1(0:e , 4:x), occupation(4:s , 4:x), original(3:s , 4:x), inventor.nmod.of(7:e , 9:x), lego.arg0(9:e , 9:x), occupation.nmod.of(4:e , 7:x), inventor.arg0(7:e , 7:x), lego(9:s , 9:x), what(0:s , 0:x), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, original, original, ADJ, null}\n', '{4, occupation, occupation, NOUN, null}\n', '{7, inventor, inventor, NOUN, null}\n', '{9, Lego, lego, NOUN, null}\n'], 'Edges': [['(7,9,7)', '(inventor.nmod.of,inventor.arg0):0.0\n'], ['(4,7,4)', '(occupation.nmod.of,occupation.arg0):0.0\n'], ['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(7,7)', 'inventor:0.0\n'], ['(9,9)', 'lego:0.0\n'], ['(4,4)', 'occupation:0.0\n'], ['(4,3)', 'original:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<inventor> <occupation> <occupation> . <Lego> <inventor> <inventor> . ?x0 <arg0> <occupation>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Lego> <http://dbpedia.org/property/inventor> <http://dbpedia.org/resource/The_Plastics_Inventor> . ?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Occupation> . <http://dbpedia.org/resource/Autodesk_Inventor> <http://dbpedia.org/property/occupation/work> <http://dbpedia.org/resource/Occupation>}'
Which countries have more than ten volcanoes?	{'Semantic Parse': ' [have.arg1(2:e , 1:x), more(3:s , 5:m.ten), volcano.arg0(6:e , 6:x), volcano.nummod(6:e , 5:m.ten), volcanoes(6:s , 6:x), countries(1:s , 1:x), country.arg0(1:e , 1:x), QUESTION(1:x), arg0(5:e , 5:m.ten), have.arg2(2:e , 6:x), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, countries, country, NOUN, null}\n', '{2, have, have, VERB, null}\n', '{3, more, more, ADJ, null}\n', '{5, ten, ten, NUM, null}\n', '{6, volcanoes, volcano, NOUN, null}\n'], 'Edges': [['(2,6,1)', '(have.arg2,have.arg1):0.0\n'], ['(6,6,5)', '(volcano.arg0,volcano.nummod):0.0\n']], 'Types': [['(1,1)', 'countries:0.0\n'], ['(5,3)', 'more:0.0\n'], ['(6,6)', 'volcanoes:0.0\n'], ['(1,0)', 'which:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<volcanoes> <arg2> ?x1 . <volcanoes> <volcano> <ten>}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Cascade_Volcanoes> <http://dbpedia.org/property/poverty> ?x1 . <http://dbpedia.org/resource/Volcanology_of_Io> <http://dbpedia.org/property/volcanoes> <http://dbpedia.org/resource/Michele_Tenore>}'
Show me all U.S. states.	{'Semantic Parse': ' [state.compound(4:e , 3:m.U.S.), states(4:s , 4:x), state.arg1(4:e , 1:x), me(1:s , 1:x), state.arg0(4:e , 4:x)]\n', 'nodes': ['{1, me, i, PRON, null}\n', '{3, U.S., u.s., PROPN, null}\n', '{4, states, state, NOUN, null}\n'], 'Edges': [['(4,4,1)', '(state.arg0,state.arg1):0.0\n'], ['(4,3,4)', '(state.compound,state.arg0):0.0\n'], ['(4,3,1)', '(state.compound,state.arg1):0.0\n']], 'Types': [['(1,1)', 'me:0.0\n'], ['(4,4)', 'states:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<U.S.> <state> <me> . <U.S.> <state> <states> . <states> <state> <me>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/U.S._Klans> <http://dbpedia.org/property/stAte> <http://dbpedia.org/resource/New_states> . <http://dbpedia.org/resource/Shan_States> <http://dbpedia.org/property/stAte> <http://dbpedia.org/resource/Me%3F> . <http://dbpedia.org/resource/U.S._Crush> <http://dbpedia.org/property/stAte> <http://dbpedia.org/resource/Me_Me_Me>}'
Who wrote the Game of Thrones theme?	{'Semantic Parse': ' [write.arg2(1:e , 3:x), game.nmod.of(3:e , 6:x), QUESTION(0:x), thrones.theme(5:s , 6:x), theme.arg0(6:e , 6:x), game(3:s , 3:x), who(0:s , 0:x), write.arg1(1:e , 0:x), game.arg0(3:e , 3:x), theme(6:s , 6:x)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, wrote, write, VERB, null}\n', '{3, Game, game, NOUN, null}\n', '{5, Thrones, thrones, NOUN, null}\n', '{6, theme, theme, NOUN, null}\n'], 'Edges': [['(3,3,6)', '(game.arg0,game.nmod.of):0.0\n'], ['(1,0,3)', '(write.arg1,write.arg2):0.0\n']], 'Types': [['(3,3)', 'game:0.0\n'], ['(6,6)', 'theme:0.0\n'], ['(6,5)', 'thrones.theme:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <write> <Game> . <Game> <game> <theme>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/write> <http://dbpedia.org/resource/Game> . <http://dbpedia.org/resource/Game> <http://dbpedia.org/property/game> <http://dbpedia.org/resource/Theme>}'
How many calories does a baguette have?	{'Semantic Parse': ' [calorie.arg0(2:e , 2:x), have.arg1(6:e , 5:x), QUESTION(0:x), have.arg2(6:e , 2:x), how(0:s , 0:x), calories(2:s , 2:x), baguette.arg0(5:e , 5:x), COUNT(2:x , 0:x), baguette(5:s , 5:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, calories, calorie, NOUN, null}\n', '{5, baguette, baguette, NOUN, null}\n', '{6, have, have, VERB, null}\n'], 'Edges': [['(6,5,2)', '(have.arg1,have.arg2):0.0\n']], 'Types': [['(5,5)', 'baguette:0.0\n'], ['(2,2)', 'calories:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {<baguette> <arg1> ?x2}	'SELECT DISTINCT ?x0 ?x2  WHERE {<http://dbpedia.org/resource/Baguette> <http://dbpedia.org/property/poverty> ?x2}'
Can you cry underwater?	{'Semantic Parse': ' [you(1:s , 1:x), cry.arg1(2:e , 1:x), underwater(3:s , 3:x), cry.arg2(2:e , 3:x), you.arg0(1:e , 1:x), underwater.arg1(3:e , 1:x), cry.xcomp(2:e , 3:e), underwater.arg0(3:e , 3:x)]\n', 'nodes': ['{1, you, you, PRON, null}\n', '{2, cry, cry, VERB, null}\n', '{3, underwater, underwater, NOUN, null}\n'], 'Edges': [['(2,1,3)', '(cry.arg1,cry.arg2):0.0\n'], ['(3,3,1)', '(underwater.arg0,underwater.arg1):0.0\n']], 'Types': [['(3,3)', 'underwater:0.0\n'], ['(1,1)', 'you:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': [['(2,3)', 'cry.xcomp:0.0\n']]}	SELECT DISTINCT   WHERE {<underwater> <underwater> <you> . <you> <cry> <underwater>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Underwater!> <http://dbpedia.org/property/under> <http://dbpedia.org/resource/You
Which companies produce hovercrafts?	{'Semantic Parse': ' [companies(1:s , 1:x), company.arg0(1:e , 1:x), hovercrafts(3:s , 3:x), QUESTION(1:x), produce.arg1(2:e , 1:x), produce.arg2(2:e , 3:x), which(0:s , 1:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, companies, company, NOUN, null}\n', '{2, produce, produce, VERB, null}\n', '{3, hovercrafts, hovercraft, NOUN, null}\n'], 'Edges': [['(2,3,1)', '(produce.arg2,produce.arg1):0.0\n']], 'Types': [['(1,1)', 'companies:0.0\n'], ['(3,3)', 'hovercrafts:0.0\n'], ['(1,0)', 'which:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<hovercrafts> <produce> ?x1}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Hovercraft> <http://dbpedia.org/property/produce> ?x1}'
How many emperors did China have?	{'Semantic Parse': ' [QUESTION(0:x), have.arg1(5:e , 4:m.China), emperors(2:s , 2:x), how(0:s , 0:x), have.arg2(5:e , 2:x), emperor.arg0(2:e , 2:x), COUNT(2:x , 0:x), many(1:s , 2:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{1, many, many, ADJ, null}\n', '{2, emperors, emperor, NOUN, null}\n', '{4, China, china, PROPN, null}\n', '{5, have, have, VERB, null}\n'], 'Edges': [['(5,4,2)', '(have.arg1,have.arg2):0.0\n']], 'Types': [['(2,2)', 'emperors:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(2,1)', 'many:0.0\n']], 'Properties': [['0', '[QUESTION]\n'], ['2', '[COUNT, 0:x]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0 ?x2  WHERE {<China> <arg1> ?x2}	'SELECT DISTINCT ?x0 ?x2  WHERE {<http://dbpedia.org/resource/China> <http://dbpedia.org/property/poverty> ?x2}'
Show me hiking trails in the Grand Canyon where there's no danger of flash floods.	"{'Semantic Parse': ' [arg0(7:e , 7:m.Grand_Canyon), hike.nmod.in(2:e , 7:m.Grand_Canyon), be.advmod(10:e , 8:x), danger.arg0(12:e , 12:x), be.expl(10:e , 9:x), be.arg1(10:e , 12:x), danger(12:s , 12:x), danger.nmod.of(12:e , 15:x), flash.floods(14:s , 15:x), flood.arg0(15:e , 15:x), QUESTION(8:x), where(8:s , 8:x), hike.arg1(2:e , 1:x), there(9:s , 9:x), floods(15:s , 15:x), me(1:s , 1:x), hike.advcl(2:e , 10:e)]\n', 'nodes': ['{1, me, i, PRON, null}\n', '{2, hiking, hike, VERB, null}\n', '{7, Canyon, canyon, PROPN, null}\n', '{8, where, where, ADV, null}\n', '{9, there, there, PRON, null}\n', ""{10, 's, be, VERB, null}\n"", '{12, danger, danger, NOUN, null}\n', '{14, flash, flash, NOUN, null}\n', '{15, floods, flood, NOUN, null}\n'], 'Edges': [['(10,8,12)', '(be.advmod,be.arg1):0.0\n'], ['(10,8,9)', '(be.advmod,be.expl):0.0\n'], ['(10,9,12)', '(be.expl,be.arg1):0.0\n'], ['(12,12,15)', '(danger.arg0,danger.nmod.of):0.0\n'], ['(2,7,1)', '(hike.nmod.in,hike.arg1):0.0\n']], 'Types': [['(12,12)', 'danger:0.0\n'], ['(15,14)', 'flash.floods:0.0\n'], ['(15,15)', 'floods:0.0\n'], ['(1,1)', 'me:0.0\n'], ['(9,9)', 'there:0.0\n'], ['(8,8)', 'where:0.0\n']], 'Properties': [['8', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': [['(2,10)', 'hike.advcl:0.0\n']]}"	SELECT DISTINCT ?x8  WHERE {<danger> <danger> <floods> . <there> <expl> <danger> . <Canyon> <hike> <me> . ?x8 <advmod> <there> . ?x8 <advmod> <danger>}	'SELECT DISTINCT ?x8  WHERE {?x8 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Up_There_Down_There> . <http://dbpedia.org/resource/Danger_Danger> <http://dbpedia.org/property/danger> <http://dbpedia.org/resource/Floods_Directive> . <http://dbpedia.org/resource/There_There> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Danger_Danger> . ?x8 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Danger_Danger> . <http://dbpedia.org/resource/Canyon> <http://dbpedia.org/property/increase> <http://dbpedia.org/resource/Me>}'
In which ancient empire could you pay with cocoa beans?	{'Semantic Parse': ' [you(5:s , 5:x), pay.nmod.in(6:e , 1:x), which(1:s , 1:x), pay.arg1(6:e , 5:x), pay.arg1(6:e , 3:x), which.arg0(1:e , 1:x), pay.nmod.with(6:e , 9:x), bean.arg0(9:e , 9:x), empire(3:s , 3:x), cocoa.beans(8:s , 9:x), ancient(2:s , 3:x), QUESTION(1:x), empire.arg0(3:e , 3:x), beans(9:s , 9:x)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, ancient, ancient, ADJ, null}\n', '{3, empire, empire, NOUN, null}\n', '{5, you, you, PRON, null}\n', '{6, pay, pay, VERB, null}\n', '{8, cocoa, cocoa, NOUN, null}\n', '{9, beans, bean, NOUN, null}\n'], 'Edges': [['(6,3,5)', '(pay.arg1,pay.arg1):0.0\n'], ['(6,3,9)', '(pay.arg1,pay.nmod.with):0.0\n'], ['(6,5,9)', '(pay.arg1,pay.nmod.with):0.0\n'], ['(6,1,3)', '(pay.nmod.in,pay.arg1):0.0\n'], ['(6,1,5)', '(pay.nmod.in,pay.arg1):0.0\n'], ['(6,1,9)', '(pay.nmod.in,pay.nmod.with):0.0\n']], 'Types': [['(3,2)', 'ancient:0.0\n'], ['(9,9)', 'beans:0.0\n'], ['(9,8)', 'cocoa.beans:0.0\n'], ['(3,3)', 'empire:0.0\n'], ['(1,1)', 'which:0.0\n'], ['(5,5)', 'you:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<empire> <pay> <beans> . ?x1 <pay> <empire> . ?x1 <pay> <beans> . <you> <pay> <beans> . ?x1 <pay> <you> . <empire> <pay> <you>}	'SELECT DISTINCT ?x1  WHERE {?x1 <http://dbpedia.org/property/cash> <http://dbpedia.org/resource/Dilly_beans> . <http://dbpedia.org/resource/Empire> <http://dbpedia.org/property/cash> <http://dbpedia.org/resource/Dilly_beans> . ?x1 <http://dbpedia.org/property/cash> <http://dbpedia.org/resource/Empire> . ?x1 <http://dbpedia.org/property/cash> <http://dbpedia.org/resource/You
How did Michael Jackson die?	{'Semantic Parse': ' [QUESTION(0:x), how(0:s , 0:x), die.advmod(4:e , 0:x), die.arg1(4:e , 3:m.Michael_Jackson)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{3, Jackson, jackson, PROPN, null}\n', '{4, die, die, VERB, null}\n'], 'Edges': [['(4,0,3)', '(die.advmod,die.arg1):0.0\n']], 'Types': [['(0,0)', 'how:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <die> <Jackson>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/die> <http://dbpedia.org/resource/Jackson_Jackson>}'
Which space probes were sent into orbit around the sun?	{'Semantic Parse': ' [probe.arg0(2:e , 2:x), sun(9:s , 9:x), sun.arg0(9:e , 9:x), probes(2:s , 2:x), send.arg2(4:e , 2:x), send.nmod.into(4:e , 6:x), orbit.nmod.around(6:e , 9:x), QUESTION(2:x), orbit(6:s , 6:x), orbit.arg0(6:e , 6:x), space.probes(1:s , 2:x), which(0:s , 2:x)]\n', 'nodes': ['{0, Which, which, DET, null}\n', '{1, space, space, NOUN, null}\n', '{2, probes, probe, NOUN, null}\n', '{4, sent, send, VERB, null}\n', '{6, orbit, orbit, NOUN, null}\n', '{9, sun, sun, NOUN, null}\n'], 'Edges': [['(6,9,6)', '(orbit.nmod.around,orbit.arg0):0.0\n'], ['(4,6,2)', '(send.nmod.into,send.arg2):0.0\n']], 'Types': [['(6,6)', 'orbit:0.0\n'], ['(2,2)', 'probes:0.0\n'], ['(2,1)', 'space.probes:0.0\n'], ['(9,9)', 'sun:0.0\n'], ['(2,0)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<orbit> <send> ?x2 . <sun> <orbit> <orbit>}	'SELECT DISTINCT ?x2  WHERE {<http://dbpedia.org/resource/Sun
When was Coca Cola invented?	{'Semantic Parse': ' [QUESTION(0:x), invent.arg2(4:e , 3:m.Coca_Cola), when(0:s , 0:x), invent.advmod(4:e , 0:x)]\n', 'nodes': ['{0, When, when, ADV, null}\n', '{3, Cola, cola, PROPN, null}\n', '{4, invented, invent, VERB, null}\n'], 'Edges': [['(4,3,0)', '(invent.arg2,invent.advmod):0.0\n']], 'Types': [['(0,0)', 'when:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Cola> <invent> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Cola> <http://dbpedia.org/property/invent> ?x0}'
What is the biggest stadium in Spain?	{'Semantic Parse': ' [stadium.arg0(4:e , 4:x), QUESTION(0:x), what.arg1(0:e , 4:x), what(0:s , 0:x), stadium(4:s , 4:x), stadium.nmod.in(4:e , 6:m.Spain), what.arg0(0:e , 0:x), arg0(6:e , 6:m.Spain), biggest(3:s , 4:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, biggest, biggest, ADJ, null}\n', '{4, stadium, stadium, NOUN, null}\n', '{6, Spain, spain, PROPN, null}\n'], 'Edges': [['(4,6,4)', '(stadium.nmod.in,stadium.arg0):0.0\n'], ['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(4,3)', 'biggest:0.0\n'], ['(4,4)', 'stadium:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Spain> <stadium> <stadium> . ?x0 <arg0> <stadium>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Spain> <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Stadium> . ?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Stadium>}'
On which day is Columbus Day?	{'Semantic Parse': ' [which(1:s , 2:m.day), be.nmod.on(3:e , 2:m.day), arg0(2:e , 2:m.day), be.arg1(3:e , 5:m.Columbus_Day)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, day, day, NOUN, null}\n', '{3, is, be, VERB, null}\n', '{5, Day, day, NOUN, null}\n'], 'Edges': [['(3,5,2)', '(be.arg1,be.nmod.on):0.0\n']], 'Types': [['(2,1)', 'which:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<Day> <arg1> <day>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Day> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Day_to_Day>}'
How short is the shortest active NBA player?	{'Semantic Parse': ' [nba.player(6:s , 7:x), QUESTION(0:x), how(0:s , 0:x), shortest(4:s , 7:x), player.arg0(7:e , 7:x), be.arg1(2:e , 7:x), active(5:s , 7:x), player(7:s , 7:x)]\n', 'nodes': ['{0, How, how, ADV, null}\n', '{4, shortest, shortest, ADJ, null}\n', '{5, active, active, ADJ, null}\n', '{6, NBA, nba, NOUN, null}\n', '{7, player, player, NOUN, null}\n'], 'Edges': [], 'Types': [['(7,5)', 'active:0.0\n'], ['(0,0)', 'how:0.0\n'], ['(7,6)', 'nba.player:0.0\n'], ['(7,7)', 'player:0.0\n'], ['(7,4)', 'shortest:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {}	'SELECT DISTINCT ?x0  WHERE {}'
Whom did Lance Bass marry?	{'Semantic Parse': ' [marry.arg1(4:e , 3:m.Lance_Bass), QUESTION(0:x), whom(0:s , 0:x), marry.arg2(4:e , 0:x)]\n', 'nodes': ['{0, Whom, whom, PRON, null}\n', '{3, Bass, bass, NOUN, null}\n', '{4, marry, marry, VERB, null}\n'], 'Edges': [['(4,0,3)', '(marry.arg2,marry.arg1):0.0\n']], 'Types': [['(0,0)', 'whom:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <marry> <Bass>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/numberOfAverageGoals/match> <http://dbpedia.org/resource/Mickey_Bass>}'
What form of government does Russia have?	{'Semantic Parse': ' [government(3:s , 3:x), have.arg2(6:e , 1:x), form(1:s , 1:x), form.arg0(1:e , 1:x), form.nmod.of(1:e , 3:x), government.arg0(3:e , 3:x), have.arg1(6:e , 5:m.Russia), what(0:s , 1:x), QUESTION(1:x)]\n', 'nodes': ['{0, What, what, DET, null}\n', '{1, form, form, NOUN, null}\n', '{3, government, government, NOUN, null}\n', '{5, Russia, russia, PROPN, null}\n', '{6, have, have, VERB, null}\n'], 'Edges': [['(1,3,1)', '(form.nmod.of,form.arg0):0.0\n'], ['(6,5,1)', '(have.arg1,have.arg2):0.0\n']], 'Types': [['(1,1)', 'form:0.0\n'], ['(3,3)', 'government:0.0\n'], ['(1,0)', 'what:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<government> <form> ?x1 . <Russia> <arg1> ?x1}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Russia> <http://dbpedia.org/property/poverty> ?x1 . <http://dbpedia.org/resource/Government> <http://dbpedia.org/property/form> ?x1}'
What movies does Jesse Eisenberg play in?	{'Semantic Parse': ' [play.arg1(5:e , 4:m.Jesse_Eisenberg), play.arg2(5:e , 1:x), what(0:s , 1:x), QUESTION(1:x), movies(1:s , 1:x), movie.arg0(1:e , 1:x)]\n', 'nodes': ['{0, What, what, DET, null}\n', '{1, movies, movie, NOUN, null}\n', '{4, Eisenberg, eisenberg, PROPN, null}\n', '{5, play, play, VERB, null}\n'], 'Edges': [['(5,1,4)', '(play.arg2,play.arg1):0.0\n']], 'Types': [['(1,1)', 'movies:0.0\n'], ['(1,0)', 'what:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {?x1 <play> <Eisenberg>}	'SELECT DISTINCT ?x1  WHERE {?x1 <http://dbpedia.org/property/play> <http://dbpedia.org/resource/Jerry_Eisenberg>}'
What color expresses loyalty?	{'Semantic Parse': ' [color.arg0(1:e , 1:x), express.arg1(2:e , 1:x), express.arg2(2:e , 3:x), what(0:s , 1:x), color(1:s , 1:x), QUESTION(1:x), loyalty(3:s , 3:x)]\n', 'nodes': ['{0, What, what, DET, null}\n', '{1, color, color, NOUN, null}\n', '{2, expresses, express, VERB, null}\n', '{3, loyalty, loyalty, NOUN, null}\n'], 'Edges': [['(2,3,1)', '(express.arg2,express.arg1):0.0\n']], 'Types': [['(1,1)', 'color:0.0\n'], ['(3,3)', 'loyalty:0.0\n'], ['(1,0)', 'what:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<loyalty> <express> ?x1}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/Loyalty_to_Loyalty> <http://dbpedia.org/property/word> ?x1}'
Show me all museums in London.	{'Semantic Parse': ' [museum.arg0(3:e , 3:x), museum.nmod.in(3:e , 5:m.London), me(1:s , 3:x), arg0(5:e , 5:m.London), museums(3:s , 3:x)]\n', 'nodes': ['{1, me, i, PRON, null}\n', '{3, museums, museum, NOUN, null}\n', '{5, London, london, PROPN, null}\n'], 'Edges': [['(3,3,5)', '(museum.arg0,museum.nmod.in):0.0\n']], 'Types': [['(3,1)', 'me:0.0\n'], ['(3,3)', 'museums:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT   WHERE {<museums> <museum> <London>}	'SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Vatican_Museums> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/London>}'
Give me all South American countries.	{'Semantic Parse': ' [give.arg2(0:e , 5:x), countries(5:s , 5:x), country.arg0(5:e , 5:x), give.iobj(0:e , 1:x), QUESTION(5:x), me(1:s , 1:x), american(4:s , 5:x)]\n', 'nodes': ['{0, Give, give, VERB, null}\n', '{1, me, i, PRON, null}\n', '{4, American, american, ADJ, null}\n', '{5, countries, country, NOUN, null}\n'], 'Edges': [['(0,1,5)', '(give.iobj,give.arg2):0.0\n']], 'Types': [['(5,4)', 'american:0.0\n'], ['(5,5)', 'countries:0.0\n'], ['(1,1)', 'me:0.0\n']], 'Properties': [['5', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x5  WHERE {<me> <give> ?x5}	'SELECT DISTINCT ?x5  WHERE {<http://dbpedia.org/resource/Montenegro> <http://dbpedia.org/property/lead> ?x5}'
Who is the coach of Ankara's ice hockey team?	"{'Semantic Parse': "" [QUESTION(0:x), who.arg0(0:e , 0:x), coach(3:s , 3:x), who(0:s , 0:x), who.arg1(0:e , 3:x), team.arg0(9:e , 9:x), hockey.team(8:s , 9:x), team.nmod.'s(9:e , 5:m.Ankara), team(9:s , 9:x), coach.arg0(3:e , 3:x), coach.nmod.of(3:e , 9:x), ice.team(7:s , 9:x), arg0(5:e , 5:m.Ankara)]\n"", 'nodes': ['{0, Who, who, PRON, null}\n', '{3, coach, coach, NOUN, null}\n', '{5, Ankara, ankara, PROPN, null}\n', '{7, ice, ice, NOUN, null}\n', '{8, hockey, hockey, NOUN, null}\n', '{9, team, team, NOUN, null}\n'], 'Edges': [['(3,3,9)', '(coach.arg0,coach.nmod.of):0.0\n'], ['(9,9,5)', ""(team.arg0,team.nmod.'s):0.0\n""], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(3,3)', 'coach:0.0\n'], ['(9,8)', 'hockey.team:0.0\n'], ['(9,7)', 'ice.team:0.0\n'], ['(9,9)', 'team:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}"	SELECT DISTINCT ?x0  WHERE {<team> <team> <Ankara> . <coach> <coach> <team> . ?x0 <arg0> <coach>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Team> <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Ankara> . ?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Coach> . <http://dbpedia.org/resource/Stagecoach> <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Team>}'
Who is the son of Sonny and Cher?	{'Semantic Parse': ' [QUESTION(0:x), son.nmod.of(3:e , 7:m.Cher), who.arg0(0:e , 0:x), son(3:s , 3:x), son.nmod.of(3:e , 5:m.Sonny), son.arg0(3:e , 3:x), who(0:s , 0:x), who.arg1(0:e , 3:x), arg0(5:e , 5:m.Sonny)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{3, son, son, NOUN, null}\n', '{5, Sonny, sonny, NOUN, null}\n', '{7, Cher, cher, PROPN, null}\n'], 'Edges': [['(3,3,5)', '(son.arg0,son.nmod.of):0.0\n'], ['(3,3,7)', '(son.arg0,son.nmod.of):0.0\n'], ['(3,7,5)', '(son.nmod.of,son.nmod.of):0.0\n'], ['(0,0,3)', '(who.arg0,who.arg1):0.0\n']], 'Types': [['(3,3)', 'son:0.0\n'], ['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<son> <son> <Sonny> . <son> <son> <Cher> . ?x0 <arg0> <son> . <Cher> <son> <Sonny>}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Cher_Cher> <http://dbpedia.org/property/son> <http://dbpedia.org/resource/Sonny> . <http://dbpedia.org/resource/Son> <http://dbpedia.org/property/adoptiveSon> <http://dbpedia.org/resource/Sonny> . ?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/My_Son
What are the five boroughs of New York?	{'Semantic Parse': ' [QUESTION(0:x), what.arg1(0:e , 4:x), what(0:s , 0:x), arg0(7:e , 7:m.New_York), borough.arg0(4:e , 4:x), what.arg0(0:e , 0:x), borough.nmod.of(4:e , 7:m.New_York), boroughs(4:s , 4:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{4, boroughs, borough, NOUN, null}\n', '{7, York, york, PROPN, null}\n'], 'Edges': [['(4,4,7)', '(borough.arg0,borough.nmod.of):0.0\n'], ['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(4,4)', 'boroughs:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<boroughs> <borough> <York> . ?x0 <arg0> <boroughs>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/London_boroughs> . <http://dbpedia.org/resource/London_boroughs> <http://dbpedia.org/property/boroughSpecial> <http://dbpedia.org/resource/York
Show me Hemingway's autobiography.	"{'Semantic Parse': "" [show.arg2(0:e , 4:x), autobiography(4:s , 4:x), me(1:s , 2:m.Hemingway), autobiography.arg0(4:e , 4:x), autobiography.nmod.'s(4:e , 2:m.Hemingway), arg0(2:e , 2:m.Hemingway)]\n"", 'nodes': ['{1, me, i, PRON, null}\n', '{2, Hemingway, hemingway, PROPN, null}\n', '{4, autobiography, autobiography, NOUN, null}\n'], 'Edges': [['(4,2,4)', ""(autobiography.nmod.'s,autobiography.arg0):0.0\n""]], 'Types': [['(4,4)', 'autobiography:0.0\n'], ['(2,1)', 'me:0.0\n']], 'Properties': [], 'EventTypes': [], 'EventEventModifiers': []}"	SELECT DISTINCT   WHERE {<Hemingway> <autobiography> <autobiography>}	"""SELECT DISTINCT   WHERE {<http://dbpedia.org/resource/Ernest_Hemingway> <http://dbpedia.org/property/autobiography> <http://dbpedia.org/resource/Everybody's_Autobiography>}"""
What kind of music did Lou Reed play?	{'Semantic Parse': ' [kind(1:s , 1:x), music(3:s , 3:x), play.arg1(7:e , 6:m.Lou_Reed), what(0:s , 1:x), play.arg2(7:e , 1:x), kind.nmod.of(1:e , 3:x), kind.arg0(1:e , 1:x), music.arg0(3:e , 3:x), QUESTION(1:x)]\n', 'nodes': ['{0, What, what, DET, null}\n', '{1, kind, kind, NOUN, null}\n', '{3, music, music, NOUN, null}\n', '{6, Reed, reed, PROPN, null}\n', '{7, play, play, VERB, null}\n'], 'Edges': [['(1,3,1)', '(kind.nmod.of,kind.arg0):0.0\n'], ['(7,1,6)', '(play.arg2,play.arg1):0.0\n']], 'Types': [['(1,1)', 'kind:0.0\n'], ['(3,3)', 'music:0.0\n'], ['(1,0)', 'what:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {?x1 <play> <Reed> . <music> <kind> ?x1}	'SELECT DISTINCT ?x1  WHERE {?x1 <http://dbpedia.org/property/play> <http://dbpedia.org/resource/Billie_Reed> . <http://dbpedia.org/resource/Music_Music_Music> <http://dbpedia.org/property/kind> ?x1}'
In which city does Sylvester Stallone live?	{'Semantic Parse': ' [city(2:s , 2:x), arg0(6:e , 6:m.live), which(1:s , 2:x), city.arg0(2:e , 2:x), nmod.in(6:e , 2:x), QUESTION(2:x), arg1(6:e , 5:m.Sylvester_Stallone)]\n', 'nodes': ['{1, which, which, DET, null}\n', '{2, city, city, NOUN, null}\n', '{5, Stallone, stallone, PROPN, null}\n', '{6, live, live, PROPN, null}\n'], 'Edges': [['(6,6,5)', '(arg0,arg1):0.0\n'], ['(6,6,2)', '(arg0,nmod.in):0.0\n'], ['(6,5,2)', '(arg1,nmod.in):0.0\n']], 'Types': [['(2,2)', 'city:0.0\n'], ['(2,1)', 'which:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<live> <arg0> ?x2 . <live> <arg0> <Stallone> . <Stallone> <arg1> ?x2}	'SELECT DISTINCT ?x2  WHERE {<http://dbpedia.org/resource/Sylvester_Stallone> <http://dbpedia.org/property/poverty> ?x2 . <http://dbpedia.org/resource/Live_Live_Live> <http://dbpedia.org/property/poverty> ?x2 . <http://dbpedia.org/resource/Live_Live_Live> <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Stallone>}'
Who was Vincent van Gogh inspired by?	{'Semantic Parse': ' [QUESTION(0:x), who.arg0(0:e , 0:x), who(0:s , 0:x), inspire.arg1(5:e , 4:m.Vincent_van_Gogh)]\n', 'nodes': ['{0, Who, who, PRON, null}\n'], 'Edges': [], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {}	'SELECT DISTINCT ?x0  WHERE {}'
What are the names of the Teenage Mutant Ninja Turtles?	{'Semantic Parse': ' [QUESTION(0:x), name.arg0(3:e , 3:x), turtles(9:s , 9:x), what.arg1(0:e , 3:x), mutant(7:s , 9:x), ninja.turtles(8:s , 9:x), what(0:s , 0:x), names(3:s , 3:x), teenage(6:s , 9:x), turtle.arg0(9:e , 9:x), what.arg0(0:e , 0:x), name.nmod.of(3:e , 9:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, names, name, NOUN, null}\n', '{6, Teenage, teenage, ADJ, null}\n', '{7, Mutant, mutant, NOUN, null}\n', '{8, Ninja, ninja, NOUN, null}\n', '{9, Turtles, turtle, NOUN, null}\n'], 'Edges': [['(3,9,3)', '(name.nmod.of,name.arg0):0.0\n'], ['(0,3,0)', '(what.arg1,what.arg0):0.0\n']], 'Types': [['(9,7)', 'mutant:0.0\n'], ['(3,3)', 'names:0.0\n'], ['(9,8)', 'ninja.turtles:0.0\n'], ['(9,6)', 'teenage:0.0\n'], ['(9,9)', 'turtles:0.0\n'], ['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {<Turtles> <name> <names> . <names> <arg1> ?x0}	'SELECT DISTINCT ?x0  WHERE {<http://dbpedia.org/resource/Romanian_Names> <http://dbpedia.org/property/poverty> ?x0 . <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles_(2014_film)> <http://dbpedia.org/property/..Name> <http://dbpedia.org/resource/Romanian_Names>}'
What are the zodiac signs?	{'Semantic Parse': ' [QUESTION(0:x), signs(4:s , 4:x), what.arg1(0:e , 4:x), sign.arg0(4:e , 4:x), what(0:s , 0:x), zodiac.signs(3:s , 4:x), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n', '{3, zodiac, zodiac, NOUN, null}\n', '{4, signs, sign, NOUN, null}\n'], 'Edges': [['(0,0,4)', '(what.arg0,what.arg1):0.0\n']], 'Types': [['(4,4)', 'signs:0.0\n'], ['(0,0)', 'what:0.0\n'], ['(4,3)', 'zodiac.signs:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {?x0 <arg0> <signs>}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/poverty> <http://dbpedia.org/resource/Priority_signs>}'
What languages do they speak in Pakistan?	{'Semantic Parse': ' [speak.arg1(4:e , 3:x), speak.arg2(4:e , 1:x), what(0:s , 1:x), language.arg0(1:e , 1:x), arg0(6:e , 6:m.Pakistan), QUESTION(1:x), they(3:s , 3:x), languages(1:s , 1:x), speak.nmod.in(4:e , 6:m.Pakistan)]\n', 'nodes': ['{0, What, what, DET, null}\n', '{1, languages, language, NOUN, null}\n', '{3, they, they, PRON, null}\n', '{4, speak, speak, VERB, null}\n', '{6, Pakistan, pakistan, PROPN, null}\n'], 'Edges': [['(4,3,6)', '(speak.arg1,speak.nmod.in):0.0\n'], ['(4,1,3)', '(speak.arg2,speak.arg1):0.0\n'], ['(4,1,6)', '(speak.arg2,speak.nmod.in):0.0\n']], 'Types': [['(1,1)', 'languages:0.0\n'], ['(3,3)', 'they:0.0\n'], ['(1,0)', 'what:0.0\n']], 'Properties': [['1', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x1  WHERE {<they> <speak> <Pakistan> . ?x1 <speak> <they> . ?x1 <speak> <Pakistan>}	'SELECT DISTINCT ?x1  WHERE {<http://dbpedia.org/resource/They> <http://dbpedia.org/property/sound> <http://dbpedia.org/resource/Pakistan> . ?x1 <http://dbpedia.org/property/sound> <http://dbpedia.org/resource/Pakistan> . ?x1 <http://dbpedia.org/property/sound> <http://dbpedia.org/resource/They>}'
Who became president after JFK died?	{'Semantic Parse': ' [QUESTION(0:x), arg0(2:e , 2:m.president), who.arg0(0:e , 0:x), become.arg1(1:e , 0:x), who(0:s , 0:x), die.arg1(5:e , 4:m.JFK), become.advcl(1:e , 5:e), arg1(2:e , 0:x), become.xcomp(1:e , 2:e), become.arg2(1:e , 2:m.president)]\n', 'nodes': ['{0, Who, who, PRON, null}\n', '{1, became, become, VERB, null}\n', '{2, president, president, PROPN, null}\n', '{5, died, die, VERB, null}\n'], 'Edges': [['(2,2,0)', '(arg0,arg1):0.0\n'], ['(1,0,2)', '(become.arg1,become.arg2):0.0\n']], 'Types': [['(0,0)', 'who:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': [['(1,5)', 'become.advcl:0.0\n'], ['(1,2)', 'become.xcomp:0.0\n']]}	SELECT DISTINCT ?x0  WHERE {?x0 <become> <president> . <president> <arg0> ?x0}	'SELECT DISTINCT ?x0  WHERE {?x0 <http://dbpedia.org/property/became> <http://dbpedia.org/resource/President> . <http://dbpedia.org/resource/President> <http://dbpedia.org/property/poverty> ?x0}'
In what city is the Heineken brewery?	{'Semantic Parse': ' [be.arg1(3:e , 5:m.Heineken), what(1:s , 2:x), city(2:s , 2:x), be.nmod.in(3:e , 2:x), city.arg0(2:e , 2:x), QUESTION(2:x), arg0(6:e , 5:m.Heineken), brewery(6:s , 5:m.Heineken)]\n', 'nodes': ['{1, what, what, DET, null}\n', '{2, city, city, NOUN, null}\n', '{3, is, be, VERB, null}\n', '{5, Heineken, heineken, PROPN, null}\n', '{6, brewery, brewery, PROPN, null}\n'], 'Edges': [['(3,5,2)', '(be.arg1,be.nmod.in):0.0\n']], 'Types': [['(5,6)', 'brewery:0.0\n'], ['(2,2)', 'city:0.0\n'], ['(2,1)', 'what:0.0\n']], 'Properties': [['2', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x2  WHERE {<Heineken> <arg1> ?x2}	'SELECT DISTINCT ?x2  WHERE {<http://dbpedia.org/resource/Heineken> <http://dbpedia.org/property/poverty> ?x2}'
What is Elon Musk famous for?	{'Semantic Parse': ' [QUESTION(0:x), what(0:s , 0:x), famous.arg1(4:e , 3:m.Elon_Musk), what.arg0(0:e , 0:x)]\n', 'nodes': ['{0, What, what, PRON, null}\n'], 'Edges': [], 'Types': [['(0,0)', 'what:0.0\n']], 'Properties': [['0', '[QUESTION]\n']], 'EventTypes': [], 'EventEventModifiers': []}	SELECT DISTINCT ?x0  WHERE {}	'SELECT DISTINCT ?x0  WHERE {}'
